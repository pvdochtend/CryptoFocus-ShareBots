//@version=5
strategy(title="Fluffy Uptrend, MACD Green, RSI", shorttitle="Fluffy MACD Uptrend", overlay=true)
// Getting inputs
fast_length = input(title="Fast Length", group="MACD Settings", defval=12)
slow_length = input(title="Slow Length", group="MACD Settings", defval=26)
src = input(title="Source", group="MACD Settings", defval=close)
signal_length = input.int(title="Signal Smoothing",  group="MACD Settings", minval = 1, maxval = 50, defval = 9)
sma_source = input.string(title="Oscillator MA Type",  defval="EMA", options=["SMA", "EMA"])
sma_signal = input.string(title="Signal Line MA Type", defval="EMA", options=["SMA", "EMA"])
// Plot colors
col_macd = #2962FF //input(#2962FF, "MACD Line  ", group="Color Settings", inline="MACD")
col_signal = #FF6D00 // input(#FF6D00, "Signal Line  ", group="Color Settings", inline="Signal")
col_grow_above = #26A69A //input(#26A69A, "Above   Grow", group="Histogram", inline="Above")
col_fall_above = #B2DFDB //input(#B2DFDB, "Fall", group="Histogram", inline="Above")
col_grow_below = #FFCDD2 //input(#FFCDD2, "Below Grow", group="Histogram", inline="Below")
col_fall_below = #FF5252 //input(#FF5252, "Fall", group="Histogram", inline="Below")
// Calculating
// Calculating
fast_ma = sma_source == "SMA" ? ta.sma(src, fast_length) : ta.ema(src, fast_length)
slow_ma = sma_source == "SMA" ? ta.sma(src, slow_length) : ta.ema(src, slow_length)
macd = fast_ma - slow_ma
signal = sma_signal == "SMA" ? ta.sma(macd, signal_length) : ta.ema(macd, signal_length)
hist = macd - signal
hline(0, "Zero Line", color=color.new(#787B86, 50))
//plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below)))
//plot(macd, title="MACD", color=col_macd)
//plot(signal, title="Signal", color=col_signal)

macdcross_long = macd and signal ? ta.crossover(macd,signal) : false
macdcross_short = macd and signal > 0 ? ta.crossunder(macd,signal) : false

isBuyAlertMACD = (hist >=0 and (hist[1] < hist) and (hist[1] <= 0))
// isSellAlertMACD = 

//EMA Uptrend
EMA_Fast_Length = input(title="EMA Fast Length", group="EMA Settings", defval=50)
EMA_Slow_Length = input(title="EMA Slow Length", group="EMA Settings", defval=200)
EMA_Fast = ta.ema(close,EMA_Fast_Length)
EMA_Slow = ta.ema(close,EMA_Slow_Length)

isUptrend = EMA_Fast > EMA_Slow

//RSI
rsiUpperLimit = input(title="RSI Upper Limit", group="RSI Settings", defval=70)
rsiLowerLimit = input(title="RSI Lower Limit", group="RSI Settings", defval=50)
rsiLength = input(title="RSI Length", group="RSI Settings", defval=14)
rsiCurrent = ta.rsi(close,rsiLength)

isRSIBetweenLimits = (rsiCurrent > rsiLowerLimit) and (rsiCurrent < rsiUpperLimit)

//Trigger Alerts
if (isBuyAlertMACD and isUptrend and isRSIBetweenLimits)  
    strategy.entry("buy",strategy.long)

long_tp_inp = input(defval=0.3, title='Long Take Profit %') /100
long_take_level = strategy.position_avg_price * (1 + long_tp_inp)
strategy.exit("Take Profit","Long", limit=long_take_level)

//if isUptrend == false 
//    strategy.close("buy")

// Backtest Range

startDate = input(timestamp("2022-09-01T00:00:00"))
finishDate = input(timestamp("2022-09-31T00:00:00"))
